generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  firstName        String?
  lastName         String?
  wallet           String
  created_at       DateTime?         @default(now())
  updated_at       DateTime?         @updatedAt
  wallets          Wallet[]
  posts            Posts[]
  platformAccounts PlatformAccount[]
}

model Wallet {
  id         Int       @id @default(autoincrement())
  walletId   String    @unique
  address    String
  chainType  String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  user_id    Int
  user       User?     @relation(fields: [user_id], references: [id])
}

enum Platforms {
  TWITTER
  LINKEDIN
  INSTAGRAM
  FACEBOOK
  LEMONADE
}

model PlatformAccount {
  id         Int       @id @default(autoincrement())
  name       String
  username   String?
  email      String?
  password   String?
  api_key    String?
  api_secret String?
  platform   Platforms
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  user_id    Int
  user       User?     @relation(fields: [user_id], references: [id])
}

enum PostStatus {
  PENDING
  COMPLETED
  CANCELED
}

model Posts {
  id           Int        @id @default(autoincrement())
  content      String
  image        String?
  scheduled_at DateTime
  status       PostStatus
  platform     Platforms
  created_at   DateTime?  @default(now())
  updated_at   DateTime?  @updatedAt
  user_id      Int
  user         User?      @relation(fields: [user_id], references: [id])
}
